services:
  tests:
    build:
      context: .
      dockerfile: Dockerfile.tests
    container_name: tests-server
    depends_on:
      api-mock:
        condition: service_started
      mock-database:
        condition: service_started
    environment:
      - REQUESTS_CA_BUNDLE=/root/ca/rsa/volumed_dir/full-chain.cert.pem
      - PROTOCOL=https  # 'http' or 'https'
      - HOST=api-mock  # 'localhost' or 'api-mock'
      - PORT=443  # Can be 80 or 443 (host: api-mock), also 8080 or 8443(host: localhost), depending on the protocol
    working_dir: /opt/project
    volumes:
      - .:/opt/project
      - api_mock_certs:/root/ca/rsa/volumed_dir
#  infinite loop to run container
#    entrypoint: ["sh", "-c", "while true; do sleep 1000; done"]
    command: ["pytest", "-vv", "/opt/project/tests"]

  api-mock:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api-mock-server
    restart: always    
    volumes:
      - api_mock_certs:/root/ca/rsa/volumed_dir
    ports:
      - "8080:80"
      - "8443:443"    

  mock-database:
    image: postgres:latest
    container_name: mock-db-server
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mockdb
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
# Almost empty database
#      - ./database/empty.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"


volumes:
  api_mock_certs:
